---
# tasks file for cisco_re-ip_switch
- name: Gather switch information
  ios_facts:
    gather_subset: l3_interfaces
  register: ios_result

- name: Build varible for finding target_ip
  set_fact:
    ip_string: "{{ ios_result.ansible_facts.ansible_net_interfaces[(lookup('vars', 'source_interface'))].ipv4[0] }}"

- name: Set target_ip
  set_fact:
    target_ip: "{{ ip_string.address | regex_replace('^[0-9]+\.[0-9]+\.[0-9]+\.', new_subnet ) }}{{ new_cidr }}"

- name: Ping new IP to make sure it is not in use
  command: ping -c1 {{ target_ip }}
  delegate_to: localhost
  register: ping_result
  ignore_errors: true

- name: Set new IP for target vlan {{ target_interface }}
  ios_l3_interfaces:
    config:
      name: "{{ target_interface }}"
      ipv4:
        - address: "{{ target_ip }} + {{ ip_string.subnet }}"
    state: replaced
  when: ping_result.rc > 0

- name: Re-ping new IP to make sure it's online
  command: ping -c1 {{ target_ip }}
  delegate_to: localhost
  register: ping_result2
  ignore_errors: true

- name: Change default gateway
  ios_config:
    lines: "ip default-gateway {{ default_gateway }}"
  when: ping_result2.rc == 0

- name: Update host IP
  set_fact:
    ansible_host: "{{ target_ip }}"

- name: Wait for new ip {{ target_ip }} to be reachable
  wait_for:
    host: "{{ target_ip }}"
    port: 22
    sleep: 2
    state: started
    timeout: 120
  delegate_to: localhost

- name: Remove old IP as long as new IP is pingable
  ios_l3_interfaces:
    config:
      name: "{{ source_interface }}"
    state: deleted
  when: ping_result2.rc == 0
